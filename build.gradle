/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 oEmbedler Inc. and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 *  documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 *  persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/graphql-java-kickstart/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+"
        classpath 'net.researchgate:gradle-release:2.7.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.7.0'
    id 'io.franzbecker.gradle-lombok' version '3.2.0' apply false
    id "com.jfrog.artifactory" version "4.21.0" apply false
    id "biz.aQute.bnd.builder" version "5.1.2" apply false
    id "org.sonarqube" version "3.0"
    id "jacoco"
}

sonarqube {
    properties {
        property "sonar.projectKey", "graphql-java-kickstart_graphql-java-servlet"
        property "sonar.organization", "graphql-java-kickstart"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: "com.jfrog.bintray"
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'com.jfrog.artifactory'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/graphql-java-kickstart/releases" }
        maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    compileJava {
        sourceCompatibility = SOURCE_COMPATIBILITY
        targetCompatibility = TARGET_COMPATIBILITY
    }

    compileJava.dependsOn(processResources)

    lombok {
        version = "1.18.16"
        sha256 = ""
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = false
            csv.enabled = false
        }
    }

    if (!it.name.startsWith('example')) {

        jar {
            from "LICENSE.md"
        }

        task sourcesJar(type: Jar) {
            dependsOn classes
            classifier 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        artifacts {
            archives sourcesJar
            archives javadocJar
        }

        publishing {
            publications {
                mainProjectPublication(MavenPublication) {
                    version version
                    from components.java

                    artifact sourcesJar {
                        classifier "sources"
                    }
                    artifact javadocJar {
                        classifier "javadoc"
                    }

                    pom.withXml {
                        asNode().children().last() + {
                            resolveStrategy = Closure.DELEGATE_FIRST
                            name PROJECT_NAME
                            description 'relay.js-compatible GraphQL servlet'
                            url 'https://github.com/graphql-java-kickstart/graphql-java-servlet'
                            inceptionYear '2016'

                            scm {
                                url 'https://github.com/graphql-java-kickstart/graphql-java-servlet'
                                connection 'scm:https://github.com/graphql-java-kickstart/graphql-java-servlet.git'
                                developerConnection 'scm:git://github.com/graphql-java-kickstart/graphql-java-servlet.git'
                            }

                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                    distribution 'repo'
                                }
                            }

                            developers {
                                developer {
                                    id 'yrashk'
                                    name 'Yurii Rashkovskii'
                                    email 'yrashk@gmail.com'
                                }
                                developer {
                                    id 'apottere'
                                    name 'Andrew Potter'
                                    email 'apottere@gmail.com'
                                }
                            }
                        }
                        // https://discuss.gradle.org/t/maven-publish-plugin-generated-pom-making-dependency-scope-runtime/7494/10
                        asNode().dependencies.'*'.findAll() {
                            it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                                dep.name == it.artifactId.text()
                            }
                        }.each { it.scope*.value = 'compile' }
                    }
                }
            }
        }

        bintray {
            user = System.env.BINTRAY_USER ?: project.findProperty('BINTRAY_USER') ?: ''
            key = System.env.BINTRAY_PASS ?: project.findProperty('BINTRAY_PASS') ?: ''
            publications = ['mainProjectPublication']
            publish = true
            pkg {
                repo = 'releases'
                name = PROJECT_NAME
                desc = PROJECT_DESC
                licenses = [PROJECT_LICENSE]
                vcsUrl = PROJECT_GIT_REPO_URL
                userOrg = 'graphql-java-kickstart'
                version {
                    name = project.version
                    gpg {
                        sign = true
                    }
                    mavenCentralSync {
                        user = System.env.OSS_USER_TOKEN_KEY ?: project.findProperty('OSS_USER_TOKEN_KEY') ?: ''
                        password = System.env.OSS_USER_TOKEN_PASS ?: project.findProperty('OSS_USER_TOKEN_PASS') ?: ''
                    }
                }
            }
        }

        artifactory {
            contextUrl = 'http://oss.jfrog.org'
            publish {
                repository {
                    if (project.version.endsWith("-SNAPSHOT")) {
                        repoKey = 'oss-snapshot-local'
                    } else {
                        repoKey = 'oss-release-local'
                    }
                    username = System.env.BINTRAY_USER ?: project.findProperty('BINTRAY_USER') ?: ''
                    password = System.env.BINTRAY_PASS ?: project.findProperty('BINTRAY_PASS') ?: ''
                }
                defaults {
                    publications('mainProjectPublication')
                    publishArtifacts = true
                    publishPom = true
                }
            }
            resolve {
                repoKey = 'oss-snapshot-local'
            }
            clientConfig.info.setBuildNumber(System.getProperty('build.number'))
        }
    }
}

release {
    tagTemplate = 'v${version}'
    failOnPublishNeeded = false
    ignoredSnapshotDependencies = ['com.graphql-java-kickstart:graphql-java-servlet']
}

task build {
    dependsOn subprojects.findResults { it.tasks.findByName('assemble') }
    dependsOn subprojects.findResults { it.tasks.findByName('check') }
    dependsOn subprojects.findResults { it.tasks.findByName('bintray') }
}

wrapper {
    gradleVersion = "${GRADLE_WRAPPER_VER}"
}
