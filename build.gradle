/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 oEmbedler Inc. and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 *  documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 *  persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.spring.io/plugins-release' }
    }
}

plugins {
    id "biz.aQute.bnd.builder" version "5.3.0" apply false
    id "org.sonarqube" version "3.3"
    id "jacoco"
    id 'io.codearte.nexus-staging' version '0.30.0'
}

sonarqube {
    properties {
        property "sonar.projectKey", "graphql-java-kickstart_graphql-java-servlet"
        property "sonar.organization", "graphql-java-kickstart"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:$LIB_LOMBOK_VER"
        annotationProcessor "org.projectlombok:lombok:$LIB_LOMBOK_VER"

        testCompileOnly "org.projectlombok:lombok:$LIB_LOMBOK_VER"
        testAnnotationProcessor "org.projectlombok:lombok:$LIB_LOMBOK_VER"
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    compileJava {
        sourceCompatibility = SOURCE_COMPATIBILITY
        targetCompatibility = TARGET_COMPATIBILITY
    }

    compileJava.dependsOn(processResources)

    test {
        useJUnitPlatform()

        afterSuite { desc, result ->
            if (!desc.parent) {
                if (result.testCount == 0) {
                    throw new IllegalStateException("No tests were found. Failing the build")
                }
            }
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = false
            csv.enabled = false
        }
    }

    if (!it.name.startsWith('example')) {
        jar {
            from "LICENSE.md"
        }

        java {
            withSourcesJar()
            withJavadocJar()
        }

        if (!version.toString().endsWith('-SNAPSHOT')) {
            ext["signing.keyId"] = System.env.SIGNING_KEY_ID
            ext["signing.password"] = System.env.SIGNING_PASSWORD
            ext["signing.secretKeyRingFile"] = System.env.SIGNING_SECRET_KEY_RING_FILE

            signing {
                sign publishing.publications
            }
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    version version
                    from components.java

                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }

                    pom {
                        name = PROJECT_NAME
                        description = 'relay.js-compatible GraphQL servlet'
                        url = 'https://github.com/graphql-java-kickstart/graphql-java-servlet'
                        inceptionYear = '2016'

                        scm {
                            url = 'https://github.com/graphql-java-kickstart/graphql-java-servlet'
                            connection = 'scm:https://github.com/graphql-java-kickstart/graphql-java-servlet.git'
                            developerConnection = 'scm:git://github.com/graphql-java-kickstart/graphql-java-servlet.git'
                        }

                        licenses {
                            license {
                                name = 'The Apache Software License, Version 2.0'
                                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution = 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'oliemansm'
                                name = 'Michiel Oliemans'
                            }
                            developer {
                                id = 'yrashk'
                                name = 'Yurii Rashkovskii'
                                email = 'yrashk@gmail.com'
                            }
                            developer {
                                id = 'apottere'
                                name = 'Andrew Potter'
                                email = 'apottere@gmail.com'
                            }
                        }
                    }
                }
            }
            repositories {
                maven {
                    name 'ossrh'
                    if (version.toString().endsWith("-SNAPSHOT")) {
                        url "https://oss.sonatype.org/content/repositories/snapshots/"
                    } else {
                        url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                    }
                    credentials {
                        username = System.env.OSS_USER_TOKEN_KEY ?: project.findProperty('OSS_USER_TOKEN_KEY') ?: ''
                        password = System.env.OSS_USER_TOKEN_PASS ?: project.findProperty('OSS_USER_TOKEN_PASS') ?: ''
                    }
                }
            }
        }
    }
}

nexusStaging {
    username = System.env.OSS_USER_TOKEN_KEY ?: project.findProperty('OSS_USER_TOKEN_KEY') ?: ''
    password = System.env.OSS_USER_TOKEN_PASS ?: project.findProperty('OSS_USER_TOKEN_PASS') ?: ''
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
